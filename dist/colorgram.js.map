{"version":3,"file":"colorgram.js","sources":["../src/colorgram.ts","../src/utils.ts"],"sourcesContent":["export type Data = number[] | any[] | Uint8Array;\n\n/**\n * RGB = 3, RGBAlpha = 4\n * TODO: Alpha not calculated\n * TODO: Grey not supported\n */\nexport enum Channels {\n  // Grey = 1,\n  // GreyAlpha = 2,\n  RGB = 3,\n  RGBAlpha = 4,\n}\n\nexport interface IImage {\n  data: Data;\n  // No need for width*height, data.length does the job\n  // width:number;\n  // height:number;\n  channels: Channels;\n}\n\nexport type Samples = Uint32Array;\n\nexport function extract(img: IImage, top: number = 12): any[] {\n  const samples: Samples = sample(img);\n  const used: number[][] = pickUsed(samples, samples.length / 4);\n  sortUsed(used);\n  // TODO: Random idea: group similar by HSL (or HUSL?) distance\n  return getColorStats(samples, used, top);\n}\n\nexport function sample(img: IImage): Samples {\n  const topBits = 2;\n\n  /* tslint:disable:no-bitwise */\n  const sides = 1 << topBits;  // 4\n  /* tslint:enable:no-bitwise */\n\n  const shiftM = 2\n  const shiftH = 4\n  const shiftL = 6\n\n  const mask: number = 0b11000000\n  const cubes: number = Math.pow(sides, 3);\n\n  // 4 is RGB + Count\n  const samples: Samples = new Uint32Array(cubes * 4);\n\n  for (let i: number = 0; i < img.data.length; i += img.channels) {\n    const h: number[] = hsl(img.data[i], img.data[i + 1], img.data[i + 2]);\n\n    /* tslint:disable:no-bitwise */\n    let v: number =\n      ((~~(img.data[i] * 0.2126 + img.data[i + 1] * 0.7152 + img.data[i + 2] * 0.0722) & mask) >> shiftM) +\n      ((h[0] & mask) >> shiftH) +\n      ((h[2] & mask) >> shiftL)\n    /* tslint:enable:no-bitwise */\n\n    // 4 is RGB + Count\n    v *= 4;\n\n    samples[v++] += img.data[i];\n    samples[v++] += img.data[i + 1];\n    samples[v++] += img.data[i + 2];\n    samples[v]++;\n  }\n\n  return samples;\n}\n\nexport function hsl(r: number, g: number, b: number): number[] {\n  const max: number = Math.max(r, g, b);\n  const min: number = Math.min(r, g, b);\n\n  /* tslint:disable:no-bitwise */\n  let h: number = 0;\n  let s: number;\n  const l: number = (max + min) >> 1;\n  /* tslint:enable:no-bitwise */\n\n  if (max === min) {\n    s = 0;\n  } else {\n    const d: number = max - min;\n    s = l > 127 ? d / (510 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h * 255, s * 255, l];\n}\n\n/**\n * TODO: sorted only by H\n */\nexport function sortByHsl(stats: any[][]): any[][] {\n  let i: number;\n\n  for (i = 0; i < stats.length; i++) {\n    stats[i][4] = hsl(stats[i][0], stats[i][1], stats[i][2]);\n  }\n\n  stats.sort((a: number[][], b: number[][]): number => {\n    return b[4][0] - a[4][0];\n  });\n\n  for (i = 0; i < stats.length; i++) {\n    delete stats[i][4];\n  }\n\n  return stats;\n}\n\nfunction pickUsed(samples: Samples, cubes: number): number[][] {\n  const used: number[][] = [];\n\n  for (let j: number = 0; j < cubes; j++) {\n    const p: number = j * 4;\n    const s: number = samples[p + 3];\n\n    if (s) {\n      used.push([s, p]);\n    }\n  }\n\n  return used;\n}\n\nfunction sortUsed(used: number[][]): void {\n  used.sort((a: number[], b: number[]): number => {\n    return b[0] - a[0];\n  });\n}\n\nfunction getColorStats(samples: Samples, used: number[][], top: number): any[] {\n  let pixels: number = 0;\n  const stats: any[] = [];\n  const max: number = Math.min(top, used.length);\n  let i: number;\n\n  for (i = 0; i < max; i++) {\n    const count: number = used[i][0];\n    const p: number = used[i][1];\n\n    /* tslint:disable:no-bitwise */\n    const c: number[] = [~~(samples[p] / count), ~~(samples[p + 1] / count), ~~(samples[p + 2] / count), count];\n    /* tslint:enable:no-bitwise */\n\n    stats.push(c);\n    pixels += count;\n  }\n\n  for (i = 0; i < stats.length; i++) {\n    stats[i][3] /= pixels;\n  }\n\n  return stats;\n}\n","import { Channels } from \"./colorgram\";\n\nexport function getPixels(stats: any[],\n                          width: number,\n                          proportional: boolean = false,\n                          channels: Channels = Channels.RGBAlpha): number[] {\n  let step: number;\n  let k: number;\n  let i: number;\n  let current: number;\n  let end: number;\n  let sum: number = 0;\n  const data: number[] = [];\n\n  for (i = 0; i < stats.length; i++) {\n    step = proportional ? stats[i][3] : 1 / stats.length;\n    current = Math.round(width * sum) * 4;\n    end = Math.round(width * (sum + step)) * 4;\n    sum += step;\n    k = current;\n\n    while (current < end) {\n      data[k++] = stats[i][0];\n      data[k++] = stats[i][1];\n      data[k++] = stats[i][2];\n\n      if (channels === Channels.RGBAlpha) {\n        data[k++] = 255;\n      }\n\n      current += channels;\n    }\n  }\n\n  return data;\n}\n"],"names":["Channels"],"mappings":"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"}